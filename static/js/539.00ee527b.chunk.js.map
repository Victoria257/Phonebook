{"version":3,"file":"static/js/539.00ee527b.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Contact/Contact.module.css?03fd","components/Contact/Contact.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/FilterContacts/FilterContacts.module.css?4cf4","components/FilterContacts/FilterContacts.jsx","webpack://react-homework-template/./src/components/Form/Form.module.css?89ba","components/Form/Form.jsx","webpack://react-homework-template/./src/pages/PageContacts.module.css?bd7b","pages/PageContacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contact\":\"Contact_contact__4zmlP\",\"list\":\"Contact_list__4ja4z\"};","import css from 'components/Contact/Contact.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { delContact } from 'redux/operations';\n\nimport * as React from 'react';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport Divider from '@mui/material/Divider';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport Avatar from '@mui/material/Avatar';\nimport Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nexport const Contact = () => {\n  const contacts = useSelector(state => state.contacts.contacts.items);\n  const filterContact = useSelector(state => state.filterContact.filters);\n\n  const dispatch = useDispatch();\n\n  const getVisibleContacts = () => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterContact.toLowerCase())\n    );\n  };\n\n  const visibleContacts = getVisibleContacts();\n\n  return visibleContacts.map(({ name, number, id }) => (\n    <li className={css.contact} key={id}>\n      <List\n        className={css.list}\n        sx={{\n          width: '100%',\n          bgcolor: 'background.paper',\n        }}\n      >\n        <ListItem alignItems=\"flex-start\">\n          <ListItemAvatar>\n            <Avatar alt={name} src=\"/static/images/avatar/1.jpg\" />\n          </ListItemAvatar>\n          <ListItemText\n            primary={name}\n            secondary={\n              <React.Fragment>\n                <Typography\n                  sx={{ display: 'inline' }}\n                  component=\"span\"\n                  variant=\"body2\"\n                  color=\"text.primary\"\n                >\n                  {number}\n                </Typography>\n              </React.Fragment>\n            }\n          />\n          <IconButton\n            edge=\"end\"\n            aria-label=\"delete\"\n            onClick={() => dispatch(delContact(id))}\n          >\n            <DeleteIcon />\n          </IconButton>\n        </ListItem>\n\n        <Divider variant=\"inset\" component=\"li\" />\n      </List>\n    </li>\n\n    //   <ul className={css.list}>\n    //     <li>{name}</li>\n    //     <li>\n    //       <a href={number} target=\"_blank\" rel=\"noreferrer\">\n    //         {number}\n    //       </a>\n    //     </li>\n    //   </ul>\n\n    //   <button\n    //     className={css.delButton}\n    //     type=\"button\"\n    //     onClick={() => dispatch(delContact(id))}\n    //   >\n    //     delete\n    //   </button>\n  ));\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ContactList_container__hYHc3\",\"title\":\"ContactList_title__gpugJ\",\"contactsList\":\"ContactList_contactsList__7leRd\"};","import { Contact } from 'components/Contact/Contact';\nimport css from './ContactList.module.css';\n\nconst ContactList = ({ children }) => {\n  return (\n    <div className={css.container}>\n      <h2 className={css.title}>Contacts</h2>\n      {children}\n      <ul className={css.contactsList}>\n        <Contact />\n      </ul>\n    </div>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"FilterContacts_filter__x53Cs\",\"filterInput\":\"FilterContacts_filterInput__y+xQQ\"};","import css from './FilterContacts.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeFilter } from 'redux/filterSlice';\n\nconst FilterContacts = () => {\n  const filter = useSelector(state => state.filterContact.filters);\n  const dispatch = useDispatch();\n\n  const onChange = event => dispatch(changeFilter(event.target.value));\n\n  return (\n    <div className={css.filter}>\n      <h3>Find contacts by name</h3>\n      <input\n        className={css.filterInput}\n        type=\"text\"\n        name=\"text\"\n        placeholder=\"Enter a name\"\n        value={filter}\n        onChange={onChange}\n        title=\"Name may contain only letters, apostrophe, dash and spaces.\"\n        required\n      ></input>\n    </div>\n  );\n};\n\nexport default FilterContacts;\n","// extracted by mini-css-extract-plugin\nexport default {\"formWrapper\":\"Form_formWrapper__IATQt\",\"form\":\"Form_form__e1yzW\",\"formLable\":\"Form_formLable__4zDCp\",\"formInput\":\"Form_formInput__sgOCo\",\"formBtn\":\"Form_formBtn__u8Ete\"};","import React, { useState } from 'react';\nimport css from './Form.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContacts } from 'redux/operations';\nimport { toast } from 'react-hot-toast';\n\nexport function Form() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(state => state.contacts.contacts.items);\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const nameNew = event.target.name.value;\n    const numberNew = event.target.elements.number.value;\n\n    if (\n      [...contacts].find(contact =>\n        contact.name.includes(event.target.name.value)\n      )\n    ) {\n      toast.error(`${name} is already in contacts`);\n      return;\n    } else {\n      dispatch(addContacts({ name: nameNew, number: numberNew }));\n      reset();\n    }\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <div className={css.formWrapper}>\n      <h2>Phonebook</h2>\n      <form className={css.form} onSubmit={handleSubmit}>\n        <label className={css.formLable}>\n          Name\n          <input\n            className={css.formInput}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n        <label className={css.formLable}>\n          Phone number\n          <input\n            className={css.formInput}\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={handleChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n        <button className={css.formBtn} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"PageContacts_container__d4JTR\"};","import ContactList from 'components/ContactList/ContactList';\nimport FilterContacts from 'components/FilterContacts/FilterContacts';\nimport { Form } from 'components/Form/Form';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/operations';\nimport css from './PageContacts.module.css';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoggedIn = useSelector(state => state.auth.isLoggedIn);\n\n  useEffect(() => {\n    isLoggedIn && dispatch(fetchContacts());\n  }, [isLoggedIn, dispatch]);\n\n  // const isLoading = state => state.contacts.isLoading;\n  // const error = state => state.contacts.error;\n  return (\n    <div className={css.container}>\n      <Form />\n      <ContactList>\n        <FilterContacts />\n        {/* {isLoading && !error && <b>Request in progress...</b>} */}\n      </ContactList>\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["Contact","contacts","useSelector","state","items","filterContact","filters","dispatch","useDispatch","filter","contact","name","toLowerCase","includes","map","number","id","className","css","List","sx","width","bgcolor","ListItem","alignItems","ListItemAvatar","Avatar","alt","src","ListItemText","primary","secondary","Typography","display","component","variant","color","IconButton","edge","onClick","delContact","Delete","Divider","children","type","placeholder","value","onChange","event","changeFilter","target","title","required","Form","useState","setName","setNumber","handleChange","currentTarget","reset","onSubmit","preventDefault","nameNew","numberNew","elements","find","toast","addContacts","pattern","isLoggedIn","auth","useEffect","fetchContacts"],"sourceRoot":""}