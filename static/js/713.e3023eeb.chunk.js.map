{"version":3,"file":"static/js/713.e3023eeb.chunk.js","mappings":"6XAoBA,SAASA,EAAUC,GACjB,OACE,UAAC,KAAD,gBACEC,QAAQ,QACRC,MAAM,iBACNC,MAAM,UACFH,GAJN,cAMG,mBACD,SAAC,IAAD,CACEE,MAAM,UACNE,KAAK,mDAFP,0BAKQ,KACP,IAAIC,MAAOC,cACX,OAGN,CAED,IAAMC,GAAQC,EAAAA,EAAAA,GAAY,CACxBC,WAAY,CACVC,aAAc,CACZC,eAAgB,CACdC,KAAM,CACJC,OAAQ,sBACRC,QAAS,MACTC,aAAc,aAOT,SAASC,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAEMC,GAAWC,EAAAA,EAAAA,MA4BjB,OA1BmBC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKC,UAAf,KA2BlC,0BACE,uCAAeP,EAAf,UAGF,SAAC,IAAD,CAAeX,MAAOA,EAAtB,UACE,UAAC,IAAD,CAAWmB,UAAU,OAAOC,SAAS,KAArC,WACE,SAAC,KAAD,KACA,UAAC,IAAD,CACEC,GAAI,CACFC,UAAW,EACXC,QAAS,OACTC,cAAe,SACfC,WAAY,UALhB,WAQE,SAAC,IAAD,CAAQJ,GAAI,CAAEK,EAAG,EAAGC,QAAS,kBAA7B,UACE,SAAC,IAAD,OAEF,SAAC,IAAD,CAAYR,UAAU,KAAKzB,QAAQ,KAAnC,sBAGA,UAAC,IAAD,CACEyB,UAAU,OACVS,YAAU,EACVC,SAjDW,SAAAC,GACnBA,EAAMC,iBACN,IAAMC,EAAO,IAAIC,SAASH,EAAMI,eAChCrB,GACEsB,EAAAA,EAAAA,IAAS,CACPxB,KAAMqB,EAAKI,IAAI,aACfC,MAAOL,EAAKI,IAAI,SAChBE,SAAUN,EAAKI,IAAI,eAGpBG,SACAC,KAAKC,EAAAA,GAAAA,QAAA,eAAsB9B,EAAtB,UACL+B,OAAM,kBACLD,EAAAA,GAAAA,MAAY,gDADP,IAIT7B,EAAQoB,EAAKI,IAAI,aAMlB,EA4BSf,GAAI,CAAEsB,GAAI,GAJZ,WAME,UAAC,KAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,WACE,SAAC,KAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,UACE,SAAC,IAAD,CACEC,aAAa,aACbrC,KAAK,YACLsC,UAAQ,EACRC,WAAS,EACTC,GAAG,YACHC,MAAM,OACNC,QAAQ,yHACRC,MAAM,8DACNC,WAAS,OAIb,SAAC,KAAD,CAAMT,MAAI,EAACC,GAAI,GAAf,UACE,SAAC,IAAD,CACEE,UAAQ,EACRC,WAAS,EACTC,GAAG,QACHC,MAAM,gBACNzC,KAAK,QACL0C,QAAQ,kIACRC,MAAM,wCACNN,aAAa,aAGjB,SAAC,KAAD,CAAMF,MAAI,EAACC,GAAI,GAAf,UACE,SAAC,IAAD,CACEE,UAAQ,EACRC,WAAS,EACTvC,KAAK,WACLyC,MAAM,WACNI,KAAK,WACLL,GAAG,WACHE,QAAQ,QACRI,YAAY,gBACZH,MAAM,wDACNN,aAAa,uBAInB,SAAC,IAAD,CACEQ,KAAK,SACLN,WAAS,EACTxD,QAAQ,YACR2B,GAAI,CAAEsB,GAAI,EAAGe,GAAI,GAJnB,sBAQA,SAAC,KAAD,CAAMd,WAAS,EAACe,eAAe,WAA/B,UACE,SAAC,KAAD,CAAMb,MAAI,EAAV,UACE,SAAC,KAAD,CAASc,GAAG,UAAUlE,QAAQ,QAA9B,yDAOR,SAACF,EAAD,CAAW6B,GAAI,CAAEsB,GAAI,SAI5B,C","sources":["pages/SignUp.js"],"sourcesContent":["import * as React from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { register } from 'redux/auth/authOperations';\n// import css from './Register.module.css';\nimport { toast } from 'react-hot-toast';\nimport { NavLink } from 'react-router-dom';\n\nfunction Copyright(props) {\n  return (\n    <Typography\n      variant=\"body2\"\n      color=\"text.secondary\"\n      align=\"center\"\n      {...props}\n    >\n      {'Copyright © '}\n      <Link\n        color=\"inherit\"\n        href=\"http://localhost:3000/goit-react-hw-08-phonebook\"\n      >\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst theme = createTheme({\n  components: {\n    MuiContainer: {\n      styleOverrides: {\n        root: {\n          border: 'solid 1px \t#0000FF',\n          padding: '5px',\n          borderRadius: '10px',\n        },\n      },\n    },\n  },\n});\n\nexport default function SignUp() {\n  const [name, setName] = useState('');\n\n  const dispatch = useDispatch();\n\n  const isLoggedIn = useSelector(state => state.auth.isLoggedIn);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    dispatch(\n      register({\n        name: data.get('firstName'),\n        email: data.get('email'),\n        password: data.get('password'),\n      })\n    )\n      .unwrap()\n      .then(toast.success(`user ${name} add`))\n      .catch(() =>\n        toast.error('Incorrectly entered login or password or name')\n      );\n\n    setName(data.get('firstName'));\n    // console.log({\n    //   email: data.get('email'),\n    //   password: data.get('password'),\n    //   firstName: data.get('firstName'),\n    // });\n  };\n\n  return isLoggedIn ? (\n    <div>\n      <div>Welcome, {name}!</div>\n    </div>\n  ) : (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n          <Box\n            component=\"form\"\n            noValidate\n            onSubmit={handleSubmit}\n            sx={{ mt: 3 }}\n          >\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  autoComplete=\"given-name\"\n                  name=\"firstName\"\n                  required\n                  fullWidth\n                  id=\"firstName\"\n                  label=\"Name\"\n                  pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                  title=\"Name may contain only letters, apostrophe, dash and spaces.\"\n                  autoFocus\n                />\n              </Grid>\n\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email Address\"\n                  name=\"email\"\n                  pattern=\"^[a-zA-Zа-яА-Я0-9._%+-]+@[a-zA-Zа-яА-Я0-9.-]+\\.[a-zA-Zа-яА-Я]{2,}$\"\n                  title=\"Email may contain only letters and @.\"\n                  autoComplete=\"email\"\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  pattern=\".{7,}\"\n                  placeholder=\"min 7 symbols\"\n                  title=\"Password may contain only letters, numbers and #$%-_.\"\n                  autoComplete=\"new-password\"\n                />\n              </Grid>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign Up\n            </Button>\n            <Grid container justifyContent=\"flex-end\">\n              <Grid item>\n                <NavLink to=\"/signIn\" variant=\"body2\">\n                  Already have an account? Sign in\n                </NavLink>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n        <Copyright sx={{ mt: 5 }} />\n      </Container>\n    </ThemeProvider>\n  );\n}\n"],"names":["Copyright","props","variant","color","align","href","Date","getFullYear","theme","createTheme","components","MuiContainer","styleOverrides","root","border","padding","borderRadius","SignUp","useState","name","setName","dispatch","useDispatch","useSelector","state","auth","isLoggedIn","component","maxWidth","sx","marginTop","display","flexDirection","alignItems","m","bgcolor","noValidate","onSubmit","event","preventDefault","data","FormData","currentTarget","register","get","email","password","unwrap","then","toast","catch","mt","container","spacing","item","xs","autoComplete","required","fullWidth","id","label","pattern","title","autoFocus","type","placeholder","mb","justifyContent","to"],"sourceRoot":""}